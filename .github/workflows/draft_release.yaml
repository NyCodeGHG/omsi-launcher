name: Draft Release
on:
  workflow_dispatch:
    inputs:
      pre_release:
        description: "Whether this is a pre_release"
        type: boolean
        default: false
        required: true


permissions:
  contents: write

jobs:
  gradle_validation:
    name: "Validate Gradle wrapper"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
  build_metadata:
    name: "Compile release metadata"
    runs-on: ubuntu-20.04
    needs: gradle_validation
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3.0.2
      - name: Setup Java
        uses: actions/setup-java@v3.5.1
        with:
          distribution: temurin
          java-version: 18
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"
  build_installers:
    name: Compile & Validate Rust code
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
      - name: Setup MSbuild
        uses: microsoft/setup-msbuild@v1.0.3
      - name: Compile rust
        uses: gradle/gradle-build-action@v2
        with:
          arguments: copyRustBinaries
      - name: Create Code Signing Certificate
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.WINDOWS_CERTIFICATE }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
      - name: Sign Binaries
        working-directory: fs-util\build\binaries\windows
        run: |
          & 'C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe' sign /fd certHash /f ..\..\..\..\certificate\certificate.pfx /p '${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}' /t http://timestamp.sectigo.com/ /d omsi-launcher omsi-elevate.exe clone-omsi.exe activate-omsi.exe relink-omsi.exe
      - name: Compile and check code
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageMsi
      - name: Sign MSI
        run: |
          mv build/compose/binaries/main/msi/omsi-launcher-*.msi omsi-launcher.msi
          & 'C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe' sign /fd certHash /f certificate\certificate.pfx /p '${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}' /t http://timestamp.sectigo.com/ /d omsi-launcher omsi-launcher.msi
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: windows_distribution
          path: omsi-launcher.msi
  draft_release:
    name: Draft new Release
    runs-on: ubuntu-20.04
    needs: [ build_metadata, build_installers ]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows_distribution
          path: release_files
      - name: Generate SHA-256 Checksums
        working-directory: release_files
        run: |
          sha256sum omsi-launcher.msi > omsi-launcher.msi.sha256
      - name: Add version to filename
        working-directory: release_files
        env:
          VERSION: ${{ needs.build_metadata.outputs.version }}
        run: |
          mv omsi-launcher.msi omsi-launcher-$VERSION.msi
          mv omsi-launcher.msi.sha256 omsi-launcher-$VERSION.msi.sha256
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.build_metadata.outputs.changelog }}
          draft: true
          prerelease: ${{ github.event.inputs.pre_release }}
          tag_name: v${{ needs.build_metadata.outputs.version }}
          name: ${{ needs.build_metadata.outputs.version }}
          files: release_files/*
